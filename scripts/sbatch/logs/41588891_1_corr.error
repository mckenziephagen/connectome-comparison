Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ...<2 lines>...
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
Traceback (most recent call last):
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    return self._fit_transform(
    )
    ^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
    ^
    raise ValueError(
    ...<2 lines>...
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
    ...<2 lines>...
    )
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
    ...<2 lines>...
    )
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.3
srun: Step created for StepId=41588891.128
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.11
srun: Step created for StepId=41588891.129
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.2
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.6
srun: Step created for StepId=41588891.130
srun: Step created for StepId=41588891.131
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.5
srun: Terminating StepId=41588891.13
srun: Terminating StepId=41588891.4
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.14
srun: Step created for StepId=41588891.132
srun: Step created for StepId=41588891.133
srun: Step created for StepId=41588891.134
srun: Step created for StepId=41588891.135
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.0
srun: Step created for StepId=41588891.136
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.7
srun: Terminating StepId=41588891.1
srun: Step created for StepId=41588891.137
srun: Step created for StepId=41588891.138
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.9
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.10
srun: Step created for StepId=41588891.139
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.12
srun: Step created for StepId=41588891.140
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.8
srun: Step created for StepId=41588891.141
srun: Step created for StepId=41588891.142
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
Traceback (most recent call last):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ...<2 lines>...
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    raise ValueError(
    ...<2 lines>...
    )
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.15
srun: Step created for StepId=41588891.143
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.19
srun: Step created for StepId=41588891.144
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.17
srun: Terminating StepId=41588891.20
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.16
srun: Step created for StepId=41588891.145
srun: Step created for StepId=41588891.146
srun: Step created for StepId=41588891.147
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.18
srun: Step created for StepId=41588891.148
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
    ^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    raise ValueError(
    ...<2 lines>...
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
    )
    ^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    data_to_wrap = f(self, X, *args, **kwargs)
    raise ValueError(
    ...<2 lines>...
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    data_to_wrap = f(self, X, *args, **kwargs)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ...<2 lines>...
    )
    ^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.25
srun: Step created for StepId=41588891.149
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.22
srun: Terminating StepId=41588891.24
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.21
srun: Step created for StepId=41588891.150
srun: error: nid006741: task 0: Exited with exit code 1
srun: Step created for StepId=41588891.151
srun: Terminating StepId=41588891.23
srun: Step created for StepId=41588891.152
srun: Step created for StepId=41588891.153
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
           ~~~~~~~~~~~~~~~~~~~^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    )
    ^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
    raise ValueError(
    ...<2 lines>...
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.29
srun: Step created for StepId=41588891.154
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.28
srun: Step created for StepId=41588891.155
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.26
srun: Terminating StepId=41588891.27
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.31
srun: Terminating StepId=41588891.30
srun: Step created for StepId=41588891.156
srun: Step created for StepId=41588891.157
srun: Step created for StepId=41588891.158
srun: Step created for StepId=41588891.159
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
Traceback (most recent call last):
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
    ...<2 lines>...
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
Traceback (most recent call last):
Traceback (most recent call last):
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
    raise ValueError(
    ...<2 lines>...
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.49
srun: Step created for StepId=41588891.160
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.44
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.32
srun: Step created for StepId=41588891.161
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.43
srun: Step created for StepId=41588891.162
srun: Step created for StepId=41588891.163
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.40
srun: Step created for StepId=41588891.164
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.48
srun: Step created for StepId=41588891.165
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.46
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.35
srun: Step created for StepId=41588891.166
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.47
srun: Terminating StepId=41588891.45
srun: Step created for StepId=41588891.167
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.42
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.41
srun: Step created for StepId=41588891.168
srun: Step created for StepId=41588891.169
srun: Step created for StepId=41588891.170
srun: Step created for StepId=41588891.171
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.36
srun: Step created for StepId=41588891.172
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.39
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.34
srun: Step created for StepId=41588891.173
srun: Step created for StepId=41588891.174
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.33
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.38
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.37
srun: Step created for StepId=41588891.175
srun: Step created for StepId=41588891.176
srun: Step created for StepId=41588891.177
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.50
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.51
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.52
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.53
srun: Step created for StepId=41588891.178
srun: Step created for StepId=41588891.179
srun: Step created for StepId=41588891.180
srun: Step created for StepId=41588891.181
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
srun: error: nid006741: task 0: Exited with exit code 1
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: Terminating StepId=41588891.56
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
srun: Step created for StepId=41588891.182
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ...<2 lines>...
    )
AssertionError
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
Traceback (most recent call last):
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.62
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.54
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.71
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.57
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.70
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.55
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.89
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.64
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.75
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.69
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
Traceback (most recent call last):
Traceback (most recent call last):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ...<2 lines>...
    )
    ...<2 lines>...
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
Traceback (most recent call last):
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    )
    ^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
srun: error: nid006741: task 0: Exited with exit code 1
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: Terminating StepId=41588891.91
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    raise ValueError(
    ...<2 lines>...
    raise ValueError(
    ...<2 lines>...
    ^
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    )
ValueError: Each subject must be 2D numpy.ndarray.
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
Traceback (most recent call last):
    ^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    raise ValueError(
    ...<2 lines>...
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
srun: error: nid006741: task 0: Exited with exit code 1
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
srun: error: nid006741: task 0: Exited with exit code 1
    ...<2 lines>...
    )
srun: Terminating StepId=41588891.58
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
srun: Terminating StepId=41588891.78
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ...<2 lines>...
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.59
srun: Terminating StepId=41588891.79
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.73
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.68
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.80
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.60
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.92
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.97
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.84
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.95
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.63
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
srun: Step created for StepId=41588891.183
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
srun: error: nid006741: task 0: Exited with exit code 1
    data_to_wrap = f(self, X, *args, **kwargs)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
srun: Terminating StepId=41588891.99
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.61
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.77
srun: Terminating StepId=41588891.81
srun: Step created for StepId=41588891.184
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ...<2 lines>...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
 You provided [<class 'numpy.memmap'>]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: Step created for StepId=41588891.185
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
Traceback (most recent call last):
srun: Step created for StepId=41588891.186
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: Step created for StepId=41588891.187
srun: Step created for StepId=41588891.188
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: Step created for StepId=41588891.189
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
srun: Step created for StepId=41588891.190
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
srun: Step created for StepId=41588891.191
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
srun: Step created for StepId=41588891.192
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
    )
    ^
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    )
    ^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
srun: Step created for StepId=41588891.193
    raise ValueError(
    ...<2 lines>...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
srun: Step created for StepId=41588891.194
srun: Step created for StepId=41588891.195
srun: Step created for StepId=41588891.196
srun: Step created for StepId=41588891.197
srun: Step created for StepId=41588891.198
srun: Step created for StepId=41588891.199
srun: Step created for StepId=41588891.200
srun: Step created for StepId=41588891.201
srun: Step created for StepId=41588891.202
srun: Step created for StepId=41588891.203
srun: Step created for StepId=41588891.204
srun: Step created for StepId=41588891.205
srun: Step created for StepId=41588891.206
srun: Step created for StepId=41588891.207
srun: Step created for StepId=41588891.208
srun: Step created for StepId=41588891.209
srun: Step created for StepId=41588891.210
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    )
    ...<2 lines>...
    )
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.74
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.87
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
srun: error: nid006741: task 0: Exited with exit code 1
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
srun: Terminating StepId=41588891.117
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
Traceback (most recent call last):
Traceback (most recent call last):
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.72
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.103
srun: Terminating StepId=41588891.122
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.85
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.88
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.66
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.108
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.102
Traceback (most recent call last):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    self._check_input(X, confounds=confounds)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    raise ValueError(
    ...<2 lines>...
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
    ^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
Traceback (most recent call last):
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
Traceback (most recent call last):
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
srun: error: nid006741: task 0: Exited with exit code 1
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.67
srun: Terminating StepId=41588891.76
srun: Terminating StepId=41588891.98
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.105
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.109
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.118
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.110
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ...<2 lines>...
    )
           ~~~~~~~~~~~~~~~~~~~^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    )
    ^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    data_to_wrap = f(self, X, *args, **kwargs)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    raise ValueError(
    ...<2 lines>...
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.93
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.65
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.94
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.104
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
Traceback (most recent call last):
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ...<2 lines>...
    )
    data_to_wrap = f(self, X, *args, **kwargs)
srun: error: nid006741: task 0: Exited with exit code 1
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
srun: Terminating StepId=41588891.123
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
srun: error: nid006741: task 0: Exited with exit code 1
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
srun: Terminating StepId=41588891.126
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.101
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.90
srun: Terminating StepId=41588891.106
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
srun: Step created for StepId=41588891.211
    data_to_wrap = f(self, X, *args, **kwargs)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
    )
    ^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    raise ValueError(
    ...<2 lines>...
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    )
ValueError: Each subject must be 2D numpy.ndarray.
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 You provided [<class 'numpy.memmap'>]
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
    ^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ...<2 lines>...
    )
    )
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.114
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.96
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.83
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
srun: error: nid006741: task 0: Exited with exit code 1
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
srun: Terminating StepId=41588891.82
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
Traceback (most recent call last):
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.86
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.112
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.107
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.113
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.100
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.111
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.127
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.121
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.125
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.119
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.116
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.124
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.115
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.120
srun: Step created for StepId=41588891.212
srun: Step created for StepId=41588891.213
srun: Step created for StepId=41588891.214
srun: Step created for StepId=41588891.215
srun: Step created for StepId=41588891.216
srun: Step created for StepId=41588891.217
srun: Step created for StepId=41588891.218
srun: Step created for StepId=41588891.219
srun: Step created for StepId=41588891.220
srun: Step created for StepId=41588891.221
srun: Step created for StepId=41588891.222
srun: Step created for StepId=41588891.223
srun: Step created for StepId=41588891.224
srun: Step created for StepId=41588891.225
srun: Step created for StepId=41588891.226
srun: Step created for StepId=41588891.227
srun: Step created for StepId=41588891.228
srun: Step created for StepId=41588891.229
srun: Step created for StepId=41588891.230
srun: Step created for StepId=41588891.231
srun: Step created for StepId=41588891.232
srun: Step created for StepId=41588891.233
srun: Step created for StepId=41588891.234
srun: Step created for StepId=41588891.235
srun: Step created for StepId=41588891.236
srun: Step created for StepId=41588891.237
srun: Step created for StepId=41588891.238
srun: Step created for StepId=41588891.239
srun: Step created for StepId=41588891.240
srun: Step created for StepId=41588891.241
srun: Step created for StepId=41588891.242
srun: Step created for StepId=41588891.243
srun: Step created for StepId=41588891.244
srun: Step created for StepId=41588891.245
srun: Step created for StepId=41588891.246
srun: Step created for StepId=41588891.247
srun: Step created for StepId=41588891.248
srun: Step created for StepId=41588891.249
srun: Step created for StepId=41588891.250
srun: Step created for StepId=41588891.251
srun: Step created for StepId=41588891.252
srun: Step created for StepId=41588891.253
srun: Step created for StepId=41588891.254
srun: Step created for StepId=41588891.255
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ...<2 lines>...
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ...<2 lines>...
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
Traceback (most recent call last):
           ^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
AssertionError
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.132
srun: Step created for StepId=41588891.256
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.139
srun: Step created for StepId=41588891.257
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.133
srun: Step created for StepId=41588891.258
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.134
srun: Step created for StepId=41588891.259
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.131
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.138
srun: Step created for StepId=41588891.260
srun: Step created for StepId=41588891.261
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.128
srun: error: nid006741: task 0: Exited with exit code 1
srun: Step created for StepId=41588891.262
srun: Terminating StepId=41588891.135
srun: Step created for StepId=41588891.263
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.142
srun: Step created for StepId=41588891.264
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.141
srun: Step created for StepId=41588891.265
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.130
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.136
srun: Step created for StepId=41588891.266
srun: Step created for StepId=41588891.267
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.140
srun: Step created for StepId=41588891.268
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.137
srun: Step created for StepId=41588891.269
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.129
srun: Step created for StepId=41588891.270
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
Traceback (most recent call last):
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
Traceback (most recent call last):
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
    )
    ^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    raise ValueError(
    ...<2 lines>...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ...<2 lines>...
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.148
srun: Step created for StepId=41588891.271
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.145
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.146
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.143
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.147
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.144
srun: Step created for StepId=41588891.272
srun: Step created for StepId=41588891.273
srun: Step created for StepId=41588891.274
srun: Step created for StepId=41588891.275
srun: Step created for StepId=41588891.276
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
Traceback (most recent call last):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ...<2 lines>...
    )
    ...<2 lines>...
    )
    data_to_wrap = f(self, X, *args, **kwargs)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.152
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.151
srun: Step created for StepId=41588891.277
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.149
srun: Step created for StepId=41588891.278
srun: Step created for StepId=41588891.279
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.153
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.150
srun: Step created for StepId=41588891.280
srun: Step created for StepId=41588891.281
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.158
srun: Step created for StepId=41588891.282
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.156
srun: Step created for StepId=41588891.283
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.159
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.155
srun: Step created for StepId=41588891.284
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.157
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.154
srun: Step created for StepId=41588891.285
srun: Step created for StepId=41588891.286
srun: Step created for StepId=41588891.287
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ^
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
Traceback (most recent call last):
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    ...<2 lines>...
    )
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
usage: calc_fc.py [-h] [--sub_id SUB_ID] [--ses_id SES_ID] [--task_id TASK_ID] [--atlas_spec ATLAS_SPEC] [--n_rois N_ROIS]
                  [--n_trs N_TRS] [--n_folds N_FOLDS] [--model MODEL] [--cv CV] [--proc_type PROC_TYPE] [--profile]
                  [--fc_data_path FC_DATA_PATH] [--max_iter MAX_ITER]
calc_fc.py: error: argument --sub_id: expected one argument
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.164
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.171
srun: error: nid006741: task 0: Exited with exit code 1
Traceback (most recent call last):
srun: Terminating StepId=41588891.160
Traceback (most recent call last):
srun: error: nid006741: task 0: Exited with exit code 1
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
srun: Terminating StepId=41588891.163
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: error: nid006741: task 0: Exited with exit code 1
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
srun: Terminating StepId=41588891.169
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    )
    ^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    )
    ^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    raise ValueError(
    ...<2 lines>...
    data_to_wrap = f(self, X, *args, **kwargs)
srun: error: nid006741: task 0: Exited with exit code 1
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
srun: Terminating StepId=41588891.168
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.166
srun: Step created for StepId=41588891.288
Traceback (most recent call last):
srun: error: nid006741: task 0: Exited with exit code 2
srun: Terminating StepId=41588891.162
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
    data_to_wrap = f(self, X, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
AssertionError
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
srun: error: nid006741: task 0: Exited with exit code 1
    )
    ^
srun: Terminating StepId=41588891.176
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.165
srun: Step created for StepId=41588891.289
srun: Step created for StepId=41588891.290
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.173
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.181
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.174
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.175
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.172
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.170
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.178
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.161
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.177
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.167
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.180
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.179
srun: Step created for StepId=41588891.291
srun: Step created for StepId=41588891.292
srun: Step created for StepId=41588891.293
srun: Step created for StepId=41588891.294
srun: Step created for StepId=41588891.295
srun: Step created for StepId=41588891.296
srun: Step created for StepId=41588891.297
srun: Step created for StepId=41588891.298
srun: Step created for StepId=41588891.299
srun: Step created for StepId=41588891.300
srun: Step created for StepId=41588891.301
srun: Step created for StepId=41588891.302
srun: Step created for StepId=41588891.303
srun: Step created for StepId=41588891.304
srun: Step created for StepId=41588891.305
srun: Step created for StepId=41588891.306
srun: Step created for StepId=41588891.307
srun: Step created for StepId=41588891.308
srun: Step created for StepId=41588891.309
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.182
srun: Step created for StepId=41588891.310
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    data_to_wrap = f(self, X, *args, **kwargs)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.183
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.184
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.185
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.186
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.188
srun: Step created for StepId=41588891.311
srun: Step created for StepId=41588891.312
srun: Step created for StepId=41588891.313
srun: Step created for StepId=41588891.314
srun: Step created for StepId=41588891.315
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
Traceback (most recent call last):
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    raise ValueError(
    ...<2 lines>...
    )
    )
    ^
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
Traceback (most recent call last):
Traceback (most recent call last):
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
Traceback (most recent call last):
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
Traceback (most recent call last):
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.191
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.197
srun: Step created for StepId=41588891.316
srun: Step created for StepId=41588891.317
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.198
srun: Step created for StepId=41588891.318
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.187
srun: Step created for StepId=41588891.319
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.203
srun: Terminating StepId=41588891.196
srun: Step created for StepId=41588891.320
srun: Step created for StepId=41588891.321
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.208
srun: Step created for StepId=41588891.322
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.190
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.200
srun: Terminating StepId=41588891.195
srun: Step created for StepId=41588891.323
srun: Step created for StepId=41588891.324
srun: Step created for StepId=41588891.325
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.193
srun: Terminating StepId=41588891.189
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.202
srun: Terminating StepId=41588891.205
srun: Step created for StepId=41588891.326
srun: Step created for StepId=41588891.327
srun: Step created for StepId=41588891.328
srun: Step created for StepId=41588891.329
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.210
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.207
srun: Step created for StepId=41588891.330
srun: Step created for StepId=41588891.331
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.192
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.199
srun: Step created for StepId=41588891.332
srun: Step created for StepId=41588891.333
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.194
srun: Step created for StepId=41588891.334
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.204
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.209
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.211
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.201
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.206
srun: Step created for StepId=41588891.335
srun: Step created for StepId=41588891.336
srun: Step created for StepId=41588891.337
srun: Step created for StepId=41588891.338
srun: Step created for StepId=41588891.339
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
Traceback (most recent call last):
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
    ...<2 lines>...
    )
    ...<2 lines>...
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
Traceback (most recent call last):
    ^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
Traceback (most recent call last):
    data_to_wrap = f(self, X, *args, **kwargs)
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
    ^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.218
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.215
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.214
srun: Step created for StepId=41588891.340
srun: Step created for StepId=41588891.341
srun: Step created for StepId=41588891.342
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.220
srun: Step created for StepId=41588891.343
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.213
srun: Step created for StepId=41588891.344
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.217
srun: Step created for StepId=41588891.345
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.237
srun: Step created for StepId=41588891.346
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.221
srun: Step created for StepId=41588891.347
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.212
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.223
srun: Step created for StepId=41588891.348
srun: Step created for StepId=41588891.349
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
Traceback (most recent call last):
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.216
srun: Step created for StepId=41588891.350
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
srun: Terminating StepId=41588891.233
srun: Terminating StepId=41588891.236
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: Step created for StepId=41588891.351
srun: Step created for StepId=41588891.352
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.224
srun: Step created for StepId=41588891.353
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.229
srun: Step created for StepId=41588891.354
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.235
srun: Terminating StepId=41588891.255
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.232
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.228
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.239
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
Traceback (most recent call last):
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
srun: Step created for StepId=41588891.355
srun: Step created for StepId=41588891.356
srun: Step created for StepId=41588891.357
srun: Step created for StepId=41588891.358
srun: Step created for StepId=41588891.359
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.238
srun: Step created for StepId=41588891.360
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.230
srun: Step created for StepId=41588891.361
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
Traceback (most recent call last):
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
Traceback (most recent call last):
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.251
Traceback (most recent call last):
srun: error: nid006741: task 0: Exited with exit code 1
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: Terminating StepId=41588891.219
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
srun: Step created for StepId=41588891.362
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
srun: Step created for StepId=41588891.363
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.227
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.222
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
srun: Step created for StepId=41588891.364
    ...<2 lines>...
    )
srun: Step created for StepId=41588891.365
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
    )
ValueError: Each subject must be 2D numpy.ndarray.
srun: Terminating StepId=41588891.231
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
srun: Step created for StepId=41588891.366
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    data_to_wrap = f(self, X, *args, **kwargs)
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
    ^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    raise ValueError(
    ...<2 lines>...
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
srun: error: nid006741: task 0: Exited with exit code 1
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: Terminating StepId=41588891.226
srun: Step created for StepId=41588891.367
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.242
srun: Step created for StepId=41588891.368
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.245
srun: Step created for StepId=41588891.369
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.243
srun: Step created for StepId=41588891.370
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.225
srun: Step created for StepId=41588891.371
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.240
srun: Step created for StepId=41588891.372
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.234
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.244
srun: Step created for StepId=41588891.373
srun: Step created for StepId=41588891.374
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.247
srun: Step created for StepId=41588891.375
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.253
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.241
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.249
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.248
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.246
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.254
srun: Step created for StepId=41588891.376
srun: Step created for StepId=41588891.377
srun: Step created for StepId=41588891.378
srun: Step created for StepId=41588891.379
srun: Step created for StepId=41588891.380
srun: Step created for StepId=41588891.381
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.250
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.252
srun: Step created for StepId=41588891.382
srun: Step created for StepId=41588891.383
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    raise ValueError(
    ...<2 lines>...
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    raise ValueError(
    ...<2 lines>...
    )
    ^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.258
srun: Terminating StepId=41588891.266
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.261
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.262
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.256
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.268
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.270
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.260
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.264
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.269
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.267
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.257
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.263
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.259
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.265
srun: Step created for StepId=41588891.384
srun: Step created for StepId=41588891.385
srun: Step created for StepId=41588891.386
srun: Step created for StepId=41588891.387
srun: Step created for StepId=41588891.388
srun: Step created for StepId=41588891.389
srun: Step created for StepId=41588891.390
srun: Step created for StepId=41588891.391
srun: Step created for StepId=41588891.392
srun: Step created for StepId=41588891.393
srun: Step created for StepId=41588891.394
srun: Step created for StepId=41588891.395
srun: Step created for StepId=41588891.396
srun: Step created for StepId=41588891.397
srun: Step created for StepId=41588891.398
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    )
    ^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    raise ValueError(
    ...<2 lines>...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.271
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.276
srun: Step created for StepId=41588891.399
srun: Step created for StepId=41588891.400
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.274
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.273
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.275
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.272
srun: Step created for StepId=41588891.401
srun: Step created for StepId=41588891.402
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: Step created for StepId=41588891.403
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.277
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.278
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.279
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    )
    ^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.281
srun: Terminating StepId=41588891.280
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    return self._fit_transform(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ...<2 lines>...
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    self._check_input(X, confounds=confounds)
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.283
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
srun: error: nid006741: task 0: Exited with exit code 1
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: Terminating StepId=41588891.287
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.285
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.286
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.284
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.282
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.288
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.290
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.289
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    raise ValueError(
    ...<2 lines>...
    )
    ^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    )
ValueError: Each subject must be 2D numpy.ndarray.
    raise ValueError(
    ...<2 lines>...
 You provided [<class 'numpy.memmap'>]
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.305
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.299
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
Traceback (most recent call last):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    raise ValueError(
    ...<2 lines>...
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
ValueError: Each subject must be 2D numpy.ndarray.
Traceback (most recent call last):
    )
    ^
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    data_to_wrap = f(self, X, *args, **kwargs)
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.308
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
Traceback (most recent call last):
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: error: nid006741: task 0: Exited with exit code 1
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
srun: Terminating StepId=41588891.304
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
    ...<2 lines>...
    )
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.294
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.291
srun: Terminating StepId=41588891.302
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.295
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.307
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.301
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.292
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.297
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.303
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.300
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.298
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.309
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.306
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.293
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.310
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.296
usage: calc_fc.py [-h] [--sub_id SUB_ID] [--ses_id SES_ID] [--task_id TASK_ID] [--atlas_spec ATLAS_SPEC] [--n_rois N_ROIS]
                  [--n_trs N_TRS] [--n_folds N_FOLDS] [--model MODEL] [--cv CV] [--proc_type PROC_TYPE] [--profile]
                  [--fc_data_path FC_DATA_PATH] [--max_iter MAX_ITER]
calc_fc.py: error: argument --sub_id: expected one argument
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    raise ValueError(
    ...<2 lines>...
    ...<2 lines>...
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 2
srun: Terminating StepId=41588891.312
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.311
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.315
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.314
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.313
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
           ^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    raise ValueError(
    ...<2 lines>...
Traceback (most recent call last):
AssertionError
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
 You provided [<class 'numpy.memmap'>]
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
AssertionError
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ^^^^^^^^^^^^^^^^^^
    data_to_wrap = f(self, X, *args, **kwargs)
AssertionError
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.321
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
Traceback (most recent call last):
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    )
    ^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    raise ValueError(
    ...<2 lines>...
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
    ^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
srun: error: nid006741: task 0: Exited with exit code 1
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
srun: Terminating StepId=41588891.319
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.336
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.326
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.335
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.323
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.334
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.325
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.316
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.332
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.329
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.320
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.328
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.330
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.322
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.338
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.331
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.318
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.327
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.339
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.324
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.337
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.317
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.333
usage: calc_fc.py [-h] [--sub_id SUB_ID] [--ses_id SES_ID] [--task_id TASK_ID] [--atlas_spec ATLAS_SPEC] [--n_rois N_ROIS]
                  [--n_trs N_TRS] [--n_folds N_FOLDS] [--model MODEL] [--cv CV] [--proc_type PROC_TYPE] [--profile]
                  [--fc_data_path FC_DATA_PATH] [--max_iter MAX_ITER]
calc_fc.py: error: argument --sub_id: expected one argument
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    raise ValueError(
    ...<2 lines>...
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    raise ValueError(
    ...<2 lines>...
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    ...<2 lines>...
    )
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.342
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.348
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.345
srun: Terminating StepId=41588891.343
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.341
srun: error: nid006741: task 0: Exited with exit code 2
srun: Terminating StepId=41588891.349
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.347
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.340
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.346
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.344
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
usage: calc_fc.py [-h] [--sub_id SUB_ID] [--ses_id SES_ID] [--task_id TASK_ID] [--atlas_spec ATLAS_SPEC] [--n_rois N_ROIS]
                  [--n_trs N_TRS] [--n_folds N_FOLDS] [--model MODEL] [--cv CV] [--proc_type PROC_TYPE] [--profile]
                  [--fc_data_path FC_DATA_PATH] [--max_iter MAX_ITER]
calc_fc.py: error: argument --sub_id: expected one argument
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ...<2 lines>...
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
srun: error: nid006741: task 0: Exited with exit code 1
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
srun: Terminating StepId=41588891.363
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 2
srun: Terminating StepId=41588891.350
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.361
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.364
srun: Terminating StepId=41588891.365
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.371
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.368
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.359
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.367
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.357
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.358
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.362
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.360
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.355
srun: Terminating StepId=41588891.366
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.373
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.372
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.351
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.379
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.354
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.380
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.352
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
srun: error: nid006741: task 0: Exited with exit code 1
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
srun: Terminating StepId=41588891.356
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
    ...<2 lines>...
    )
    data_to_wrap = f(self, X, *args, **kwargs)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    ^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ^
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    )
ValueError: Each subject must be 2D numpy.ndarray.
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
 You provided [<class 'numpy.memmap'>]
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.378
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.377
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.375
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.353
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.370
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.383
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.382
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.369
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.381
srun: error: nid006741: task 0: Exited with exit code 1
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.374
srun: Terminating StepId=41588891.376
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 131, in <module>
    assert len(ts_files) == 1
           ^^^^^^^^^^^^^^^^^^
AssertionError
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ...<2 lines>...
    )
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
Traceback (most recent call last):
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    ...<2 lines>...
    )
    data_to_wrap = f(self, X, *args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    data_to_wrap = f(self, X, *args, **kwargs)
    data_to_wrap = f(self, X, *args, **kwargs)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
Traceback (most recent call last):
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    )
    ^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
    )
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    raise ValueError(
    ...<2 lines>...
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
    )
    ^
    )
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    raise ValueError(
    ...<2 lines>...
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
    )
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    )
    ^
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    raise ValueError(
    ...<2 lines>...
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    )
    data_to_wrap = f(self, X, *args, **kwargs)
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
Traceback (most recent call last):
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
Traceback (most recent call last):
    )
Traceback (most recent call last):
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
    return self._fit_transform(
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    )
    ^
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
Traceback (most recent call last):
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    ...<2 lines>...
    )
  File "/global/homes/m/mphagen/functional-connectivity/connectome-comparison/scripts/processing/calc_fc.py", line 209, in <module>
    corr_mat = model.fit_transform([time_series])[0]
    raise ValueError(
    ...<2 lines>...
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/sklearn/utils/_set_output.py", line 316, in wrapped
    )
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 689, in fit_transform
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
    return self._fit_transform(
           ~~~~~~~~~~~~~~~~~~~^
        X, do_fit=True, do_transform=True, confounds=confounds
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 550, in _fit_transform
    self._check_input(X, confounds=confounds)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/homes/m/mphagen/miniconda3/envs/fc_py311/lib/python3.13/site-packages/nilearn/connectome/connectivity_matrices.py", line 481, in _check_input
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Each subject must be 2D numpy.ndarray.
 You provided [<class 'numpy.memmap'>]
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.401
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.403
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.400
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.399
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.389
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.385
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.386
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.384
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.388
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.391
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.387
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.390
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.394
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.393
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.396
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.402
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.398
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.392
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.395
srun: error: nid006741: task 0: Exited with exit code 1
srun: Terminating StepId=41588891.397
